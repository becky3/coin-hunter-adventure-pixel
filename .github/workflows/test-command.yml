name: Test Command

on:
  issue_comment:
    types: [created]

permissions:
  contents: read
  pull-requests: write
  actions: write

jobs:
  test-command:
    if: |
      github.event.issue.pull_request &&
      github.event.comment.body == '/test'
    runs-on: ubuntu-latest
    
    steps:
    - name: Get PR information
      id: pr
      uses: actions/github-script@v7
      with:
        script: |
          const pr = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number
          });
          return {
            ref: pr.data.head.ref,
            sha: pr.data.head.sha
          };

    - name: Add reaction
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.reactions.createForIssueComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            comment_id: context.payload.comment.id,
            content: 'rocket'
          });

    - name: Parse command
      id: parse
      run: |
        echo "test_type=full" >> $GITHUB_OUTPUT

    - name: Trigger E2E tests
      uses: actions/github-script@v7
      with:
        script: |
          const prData = ${{ steps.pr.outputs.result }};
          const testType = '${{ steps.parse.outputs.test_type }}';
          
          // E2Eテストワークフローを実行
          await github.rest.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'e2e-tests.yml',
            ref: prData.ref,
            inputs: {
              test_type: testType,
              branch: prData.ref,
              pr_number: context.issue.number.toString()
            }
          });
          
          // コメントで通知
          const body = `🚀 E2Eテストを開始しました！\n\nブランチ: \`${prData.ref}\`\nテスト数: 12個（約80秒）\n\n[実行状況を確認](https://github.com/${context.repo.owner}/${context.repo.repo}/actions)`;
          
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: body
          });